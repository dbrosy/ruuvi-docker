version: '3'

services:
  # Define a Telegraf service
  telegraf:
    image: "telegraf:${TELEGRAF_VERSION}"
    container_name: ruuvi-telegraf
    restart: unless-stopped
    volumes:
      - ./config/telegraf/telegraf.conf:/etc/telegraf/telegraf.conf:ro
    links:
      - influxdb
    ports:
      - "8092:8092/udp"
      - "8094:8094"
      - "8125:8125/udp"
  # Define an InfluxDB service
  influxdb:
    image: "influxdb:${INFLUXDB_VERSION}"
    container_name: ruuvi-influxdb
    restart: unless-stopped
    volumes:
      - ./data/influxdb:/var/lib/influxdb
    ports:
      - "8086:8086"
  # Define a Chronograf service
  chronograf:
    image: "chronograf:${CRONOGRAF_VERSION}"
    container_name: ruuvi-chronograf
    restart: unless-stopped
    environment:
      INFLUXDB_URL: http://influxdb:8086
      KAPACITOR_URL: http://kapacitor:9092
    ports:
      - "8888:8888"
    links:
      - influxdb
      - kapacitor
  # Define a Kapacitor service
  kapacitor:
    image: "kapacitor:${KAPACITOR_VERSION}"
    container_name: ruuvi-kapacitor
    restart: unless-stopped
    environment:
      KAPACITOR_HOSTNAME: kapacitor
      KAPACITOR_INFLUXDB_0_URLS_0: http://influxdb:8086
    links:
      - influxdb
    ports:
      - "9092:9092"
  # Define a service for using the influx CLI tool.
  # docker-compose run influxdb-cli
#  influxdb-cli:
#    image: "influxdb:${INFLUXDB_VERSION}"
#    container_name: ruuvi-influxdb-cli
#    restart: unless-stopped
#    entrypoint:
#      - influx
#      - -host
#      - influxdb
#    links:
#      - influxdb
  # Define a service for using the kapacitor CLI tool.
  # docker-compose run kapacitor-cli
#  kapacitor-cli:
#    image: "kapacitor:${KAPACITOR_VERSION}"
#    container_name: ruuvi-kapacitor-cli
#    restart: unless-stopped
#    entrypoint: bash
#    environment:
#      KAPACITOR_URL: http://kapacitor:9092
#    links:
#      - kapacitor
  # Define a service using Grafana
  grafana:
    image: "grafana/grafana:${GRAFANA_VERSION}"
    container_name: ruuvi-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
#      - ./config/grafana/grafana.ini:/etc/grafana/grafana.ini:ro
      - ./config/grafana/provisioning/datasources/datasource.yaml:/etc/grafana/provisioning/datasources/datasource.yaml:ro
      - grafana-data:/var/lib/grafana     
  ruuvi-collector:
    image: ruuvi-collector:${RUUVI_COLLECTOR_VERSION}
    container_name: ruuvi-collector
    restart: unless-stopped
    privileged: true
    network_mode: "host"
    
volumes:
  grafana-data:
